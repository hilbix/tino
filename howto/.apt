#!/bin/bash
# https://raw.githubusercontent.com/hilbix/tino/master/howto/.apt

fgrep -vxf /etc/apt/apt.conf.d/99tino >> /etc/apt/apt.conf.d/99tino <<'EOF'
Acquire::PDiffs "false";
EOF

rm -f /var/lib/apt/lists/partial/*

DISTS() { find /etc -name '*.*-dist'; }
DISTS

echo
# Do the interactive thing right at the beginning:
#
# Ask for permission to purge no more needed packages.
# Config is kept by etckeeper, so there really is no need to keep any clutter.

p=()
IFS=$'\n' read -rd '' -a p < <(apt-get -s autoremove | sed -n 's/^Remv \([^ ]*\) \[.*$/\1/p')
[ 0 = "${#p[@]}" ] || apt-get purge "${p[@]}"


# Now do the real update tasks

apt-get autoclean
apt-get update
apt-get upgrade

# Finally list of processes still accessing old files
# You can use "needrestart", however this helps, too.

declare -A list	# must be outside function due to bash BUG: delare -g -A list
delmaps()
{
local b x ok

list=()

ok=false
while read -r b b x x x x
do
	# ignore shared memory segments
	case "$b" in
	(???s)	continue;;
	esac

	# ignore some other places
	x="${x%' (deleted)'}"
	case "$x" in
#	(*.tmp)	continue;;
	(/)		continue;;
	(/dev/*)	continue;;
#	(/tmp/*)	continue;;
	(/etc/*)	continue;;
	(/home/*)	continue;;
#	(/run/user/*)	continue;;
	(*/icon-theme.cache)	continue;;
	(/var/lib/lightdm/.config/*)	continue;;
	(*/schemas/gschemas.compiled)	continue;;

# following are relevant:

	(*/lib/*)	;;
	(*)		list["$x"]=1;;
	esac
	ok=:
done < <(fgrep -s '(deleted)' "$1/maps")

$ok
}

NOTES=''
ERRS=''

# https://askubuntu.com/q/53364/164798
fix-dkms()
{
KERN=()
for a in *; do KERN+=("$a"); done

cd /

while read -ru6 m v
do
	for k in "${KERN[@]}"
	do
		printf '\n##### %q %q %q #####\n\n' "$m" "$v" "$k"
		for x in 1 2
		do
			if	OUT="$(dkms -m "$m" -v "$v" -k "$k" "$@" 2>&1)"
			then
				printf -vS 'DKMS:OK %q %q %q\n' "$m" "$v" "$k"
				NOTES="$NOTES$S"
				break
			fi
			printf -vS 'DKMS:KO=%d %q %q %q\n' "$?" "$m" "$v" "$k"
			case "$x:$OUT" in
			(1:*'Please install'*' linux-headers-'*)
				PACK="${OUT#* linux-headers-}"
				PACK="${PACK%% *}"
				apt-get install "linux-headers-$PACK" && continue
				;;
			esac
			ERRS="$ERRS$S"
			echo "$OUT"
			echo
			break
		done
	done
done 6< <(LC_ALL=C.UTF-8 dkms status | while read -r n v r; do echo "${n%,}" "${v%[:,]}"; done | sort -u)
}

# Once upon a time I was wondering, where all the precious space in /var/lib/snapd went.
# Following does the cleanup on manual updates.  Note that
#	snap set system refresh.retain=3
# is the default, but cannot be set below 2.  WTF why?  I want it to be 0!
# BTW: This only removes disabled snaps with newer active versions.
clean-snaps()
{
  [ -x "$1" ] || return
  "$1" refresh || return
  local -A SNAP KICK
  local a

  while read -ru6 name version revision tracking publisher notes
  do
	case "$notes" in
	(disabled|disabled,*|*,disabled|*,disabled,*)	KICK["$name"]="$revision";;
	(*)						SNAP["$name"]="$revision";;
	esac
  done 6< <(LC_ALL=C.UTF-8 "$1" list --all)
  for a in "${!KICK[@]}"
  do
	[ -n "${SNAP["$a"]}" ] && "$1" remove "$a" --revision="${KICK["$a"]}"
  done
}

# Cleaning only a single old revision per run should be enough
clean-snaps /usr/bin/snap

cd /var/lib/initramfs-tools && fix-dkms install

if	[ -x /usr/bin/check-support-status ]
then	/usr/bin/check-support-status
else	echo "#MISSING# apt-get install debian-security-support"
fi
if	[ -x /usr/bin/ubuntu-security-status ]
then	MY_MIRROR="$(sed -n 's/^#MIRROR#//p' /etc/apt/sources.list.d/*.list)" /usr/bin/ubuntu-security-status
elif	[ -x /usr/bin/ubuntu-support-status ]
then	/usr/bin/ubuntu-support-status
#else	echo 'Not Ubuntu?'
fi

echo
echo "$NOTES"

for a in /proc/[0-9]*
do
	delmaps "$a" || continue
	printf '%q %q' "${a#/proc/}" "$(basename -- "$(readlink -m -- "$a/exe")")"
	[ 0 = "${#list[@]}" ] || printf ' %q' "${!list[@]}"
	printf '\n'
done | sort -k2

echo

# And: find still present dist-data
DISTS

echo "$ERRS"

